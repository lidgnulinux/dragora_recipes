# Build recipe for kmod.
#
# Copyright (c) 2017-2019 Matias Fonzo, <selk@dragora.org>.
# Copyright (c) 2021-2023 Matias Fonzo, <selk@dragora.org>.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Exit immediately on any error
set -e

program=kmod
version=32
release=0

# Define a category for the output of the package name
pkgcategory=kernel

tarname=${program}-${version}.tar.xz

# Remote source(s)
fetch=https://kernel.org/pub/linux/utils/kernel/kmod/$tarname

description="
Linux kernel module handling.

kmod is a set of tools to handle common tasks with Linux kernel modules
like insert, remove, list, check properties, resolve dependencies and
aliases.
"

homepage=https://git.kernel.org/?p=utils/kernel/kmod/kmod.git
license=LGPLv2.1

# Source documentation
docs="COPYING NEWS README* TODO"
docsdir="${docdir}/${program}-${version}"

build()
{
    unpack "${tardir}/$tarname"

    cd "$srcdir"

    # Add support for Kernel modules compressed with LZIP
    patch -p1 < "${worktree}/patches/kmod/strndupa.patch"
    patch -p1 < "${worktree}/patches/kmod/portable-basename.patch"

    # Set sane permissions
    chmod -R u+w,go-w,a+rX-s .

    # --enable-static is not supported by kmod

    ./configure CPPFLAGS="$QICPPFLAGS" \
    CFLAGS="$QICFLAGS" LDFLAGS="$QILDFLAGS" \
     $configure_args \
     --libdir=/usr/lib64 \
     --infodir=$infodir \
     --mandir=$mandir \
     --docdir=$docsdir \
     --enable-tools \
     --with-rootlibdir=/usr/lib64 \
     --with-openssl \
     --with-zlib \
     --with-xz \
     --with-zstd \
     --build="$(gcc -dumpmachine)"

    make -j${jobs} V=1
    make -j${jobs} DESTDIR="$destdir" install

    # Make symlinks for compatibility

    mkdir -p "${destdir}/usr/sbin"
    for target in depmod insmod lsmod modinfo modprobe rmmod
    do
        ( cd "${destdir}/usr/sbin" && ln -sf ../bin/kmod $target )
    done

    # For user invocation
    ( cd "${destdir}/usr/bin" && ln -sf ../bin/kmod lsmod )

    # Prepare directories / files for modprobe

    # mkdir -p "${destdir}/usr/lib${libSuffix}/modprobe.d" \
    #          "${destdir}/etc/modprobe.d"

    # for file in "${worktree}"/archive/kmod/etc/modprobe.d/*
    # do
    #     cp -p $file "${destdir}/etc/modprobe.d/"
    #     chmod 644 "${destdir}/etc/modprobe.d/${file##*/}"
    # done

    # To manage (dot) new files
    # touch "${destdir}/etc/modprobe.d/.graft-config"

    # Compress info documents deleting index file for the package
    if test -d "${destdir}/$infodir"
    then
        rm -f "${destdir}/${infodir}/dir"
        lzip -9 "${destdir}/${infodir}"/*
    fi

    # Compress and link man pages (if needed)
    if test -d "${destdir}/$mandir"
    then
        (
            cd "${destdir}/$mandir"
            find . -type f -exec lzip -9 {} +
            find . -type l | while read -r file
            do
                ln -sf "$(readlink -- "$file").lz" "${file}.lz"
                rm -- "$file"
            done
        )
    fi

    # Copy documentation
    # mkdir -p "${destdir}/$docsdir"
    # cp -p $docs "${destdir}/$docsdir"
}

