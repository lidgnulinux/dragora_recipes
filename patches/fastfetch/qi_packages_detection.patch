diff --git a/doc/json_schema.json b/doc/json_schema.json
index 0b1fe82f..d3f42ebe 100644
--- a/doc/json_schema.json
+++ b/doc/json_schema.json
@@ -1733,6 +1733,7 @@
                                                 "opkg",
                                                 "pacman",
                                                 "paludis",
+                                                "qi",
                                                 "pkg",
                                                 "pkgtool",
                                                 "rpm",
diff --git a/src/detection/packages/packages.h b/src/detection/packages/packages.h
index 4e954b96..c0656f71 100644
--- a/src/detection/packages/packages.h
+++ b/src/detection/packages/packages.h
@@ -31,6 +31,7 @@ typedef struct FFPackagesResult
     uint32_t sorcery;
     uint32_t winget;
     uint32_t xbps;
+    uint32_t qi;
 
     uint32_t all; //Make sure this goes last
 
diff --git a/src/detection/packages/packages_linux.c b/src/detection/packages/packages_linux.c
index 5933c87c..1a02c1e8 100644
--- a/src/detection/packages/packages_linux.c
+++ b/src/detection/packages/packages_linux.c
@@ -436,6 +436,7 @@ static void getPackageCounts(FFstrbuf* baseDir, FFPackagesResult* packageCounts,
     if (!(options->disabled & FF_PACKAGES_FLAG_OPKG_BIT)) packageCounts->opkg += getNumStrings(baseDir, "/usr/lib/opkg/status", "Package:"); // openwrt
     if (!(options->disabled & FF_PACKAGES_FLAG_AM_BIT)) packageCounts->am = getAM(baseDir);
     if (!(options->disabled & FF_PACKAGES_FLAG_SORCERY_BIT)) packageCounts->sorcery += getNumStrings(baseDir, "/var/state/sorcery/packages", ":installed:");
+    if (!(options->disabled & FF_PACKAGES_FLAG_QI_BIT)) packageCounts->qi += getNumStrings(baseDir, "/var/qi/installed_packages.list", "\n");
 }
 
 static void getPackageCountsRegular(FFstrbuf* baseDir, FFPackagesResult* packageCounts, FFPackagesOptions* options)
diff --git a/src/modules/packages/option.h b/src/modules/packages/option.h
index f294b916..8876547b 100644
--- a/src/modules/packages/option.h
+++ b/src/modules/packages/option.h
@@ -30,6 +30,7 @@ typedef enum FFPackagesFlags
     FF_PACKAGES_FLAG_SORCERY_BIT = 1 << 20,
     FF_PACKAGES_FLAG_LPKG_BIT = 1 << 21,
     FF_PACKAGES_FLAG_LPKGBUILD_BIT = 1 << 22,
+    FF_PACKAGES_FLAG_QI_BIT = 1 << 23,
 } FFPackagesFlags;
 
 typedef struct FFPackagesOptions
diff --git a/src/modules/packages/packages.c b/src/modules/packages/packages.c
index 229e1f43..f15a1bb6 100644
--- a/src/modules/packages/packages.c
+++ b/src/modules/packages/packages.c
@@ -4,7 +4,7 @@
 #include "modules/packages/packages.h"
 #include "util/stringUtils.h"
 
-#define FF_PACKAGES_NUM_FORMAT_ARGS 32
+#define FF_PACKAGES_NUM_FORMAT_ARGS 33
 
 void ffPrintPackages(FFPackagesOptions* options)
 {
@@ -68,6 +68,7 @@ void ffPrintPackages(FFPackagesOptions* options)
         FF_PRINT_PACKAGE(sorcery)
         FF_PRINT_PACKAGE(lpkg)
         FF_PRINT_PACKAGE(lpkgbuild)
+        FF_PRINT_PACKAGE(qi)
 
         putchar('\n');
     }
@@ -109,6 +110,7 @@ void ffPrintPackages(FFPackagesOptions* options)
             {FF_FORMAT_ARG_TYPE_UINT, &nixAll},
             {FF_FORMAT_ARG_TYPE_UINT, &flatpakAll},
             {FF_FORMAT_ARG_TYPE_UINT, &brewAll},
+            {FF_FORMAT_ARG_TYPE_UINT, &counts.qi},
         }));
     }
 
@@ -176,6 +178,9 @@ bool ffParsePackagesCommandOptions(FFPackagesOptions* options, const char* key,
                     FF_TEST_PACKAGE_NAME(PKGTOOL)
                     FF_TEST_PACKAGE_NAME(PALUDIS)
                     break;
+                case 'Q': if (false);
+                    FF_TEST_PACKAGE_NAME(QI)
+                    break;
                 case 'R': if (false);
                     FF_TEST_PACKAGE_NAME(RPM)
                     break;
@@ -281,6 +286,9 @@ void ffParsePackagesJsonObject(FFPackagesOptions* options, yyjson_val* module)
                             FF_TEST_PACKAGE_NAME(PKGTOOL)
                             FF_TEST_PACKAGE_NAME(PALUDIS)
                             break;
+                        case 'Q': if (false);
+                            FF_TEST_PACKAGE_NAME(QI)
+                            break;
                         case 'R': if (false);
                             FF_TEST_PACKAGE_NAME(RPM)
                             break;
@@ -333,6 +341,7 @@ void ffGeneratePackagesJsonConfig(FFPackagesOptions* options, yyjson_mut_doc* do
         FF_TEST_PACKAGE_NAME(PALUDIS)
         FF_TEST_PACKAGE_NAME(PKG)
         FF_TEST_PACKAGE_NAME(PKGTOOL)
+        FF_TEST_PACKAGE_NAME(QI)
         FF_TEST_PACKAGE_NAME(MACPORTS)
         FF_TEST_PACKAGE_NAME(RPM)
         FF_TEST_PACKAGE_NAME(SCOOP)
@@ -379,6 +388,7 @@ void ffGeneratePackagesJsonResult(FF_MAYBE_UNUSED FFPackagesOptions* options, yy
     FF_APPEND_PACKAGE_COUNT(paludis)
     FF_APPEND_PACKAGE_COUNT(pkg)
     FF_APPEND_PACKAGE_COUNT(pkgtool)
+    FF_APPEND_PACKAGE_COUNT(qi)
     FF_APPEND_PACKAGE_COUNT(macports)
     FF_APPEND_PACKAGE_COUNT(rpm)
     FF_APPEND_PACKAGE_COUNT(scoop)
@@ -393,7 +403,7 @@ void ffGeneratePackagesJsonResult(FF_MAYBE_UNUSED FFPackagesOptions* options, yy
 
 void ffPrintPackagesHelpFormat(void)
 {
-    FF_PRINT_MODULE_FORMAT_HELP_CHECKED(FF_PACKAGES_MODULE_NAME, "{2} (pacman){?3}[{3}]{?}, {4} (dpkg), {5} (rpm), {6} (emerge), {7} (eopkg), {8} (xbps), {9} (nix-system), {10} (nix-user), {11} (nix-default), {12} (apk), {13} (pkg), {14} (flatpak-system), {15} (flatpack-user), {16} (snap), {17} (brew), {18} (brew-cask), {19} (MacPorts), {20} (scoop), {21} (choco), {22} (pkgtool), {23} (paludis), {24} (winget), {25} (opkg), {26} (am), {27} (sorcery), {28} (lpkg), {29} (lpkgbuild)", FF_PACKAGES_NUM_FORMAT_ARGS, ((const char* []) {
+    FF_PRINT_MODULE_FORMAT_HELP_CHECKED(FF_PACKAGES_MODULE_NAME, "{2} (pacman){?3}[{3}]{?}, {4} (dpkg), {5} (rpm), {6} (emerge), {7} (eopkg), {8} (xbps), {9} (nix-system), {10} (nix-user), {11} (nix-default), {12} (apk), {13} (pkg), {14} (flatpak-system), {15} (flatpack-user), {16} (snap), {17} (brew), {18} (brew-cask), {19} (MacPorts), {20} (scoop), {21} (choco), {22} (pkgtool), {23} (paludis), {24} (winget), {25} (opkg), {26} (am), {27} (sorcery), {28} (lpkg), {29} (lpkgbuild), {30} (qi)", FF_PACKAGES_NUM_FORMAT_ARGS, ((const char* []) {
         "Number of all packages",
         "Number of pacman packages",
         "Pacman branch on manjaro",
@@ -423,6 +433,7 @@ void ffPrintPackagesHelpFormat(void)
         "Number of sorcery packages",
         "Number of lpkg packages",
         "Number of lpkgbuild packages",
+        "Number of qi packages",
         "Total number of all nix packages",
         "Total number of all flatpak packages",
         "Total number of all brew packages",
