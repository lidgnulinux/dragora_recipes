# Build recipe for curl.
#
# Copyright (c) 2018 Mateus P. Rodrigues, <mprodrigues@dragora.org>.
# Copyright (c) 2018-2019, 2021-2022 Matias A. Fonzo, <selk@dragora.org>.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Exit immediately on any error
set -e

program=curl
version=8.10.1
release=1

# Define a category for the output of the package name
pkgcategory=networking

tarname=${program}-${version}.tar.bz2

# Remote source(s)
fetch=https://curl.haxx.se/download/$tarname

description="
Command line tool and library for transferring data with URLs.

cURL is a powerful command line tool for transferring data supporting
various protocolos, including DICT, FILE, FTP, FTPS, Gopher, HTTP,
HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP,
SMB, SMBS, SMTP, SMTPS, Telnet and TFTP.
"

homepage=https://curl.haxx.se/
license="Custom MIT/X derivate"

# Source documentation
#docs="CHANGES COPYING README RELEASE-NOTES"
docsdir="${docdir}/${program}-${version}"

build()
{
    unpack "${tardir}/$tarname"

    cd "$srcdir"

    # Set sane permissions
    chmod -R u+w,go-w,a+rX-s .

    ./configure CPPFLAGS="$QICPPFLAGS" \
    CFLAGS="$QICFLAGS" LDFLAGS="$QILDFLAGS" \
     $configure_args \
     --libdir=/usr/lib64 \
     --infodir=$infodir \
     --mandir=$mandir \
     --enable-static=no \
     --enable-shared=yes \
     --enable-ipv6 \
     --enable-pthreads \
     --enable-threaded-resolver \
     --with-ca-path=/etc/ssl/certs \
     --with-ca-bundle=/etc/ssl/cert.pem \
     --with-libssh2 \
     --with-openssl \
     --build="$(gcc -dumpmachine)"

    make -j${jobs} V=1
    make -j${jobs} DESTDIR="$destdir" install-strip

    # Compress and link man pages (if needed)
    if test -d "${destdir}/$mandir"
    then
        (
            cd "${destdir}/$mandir"
            find . -type f -exec lzip -9 {} +
            find . -type l | while read -r file
            do
                ln -sf "$(readlink -- "$file").lz" "${file}.lz"
                rm -- "$file"
            done
        )
    fi

    # Copy documentation
    # mkdir -p "${destdir}/$docsdir"
    # cp -p $docs "${destdir}/$docsdir"
}

