# Build recipe for libarchive.
#
# Copyright (c) 2018-2019, 2021 Matias Fonzo, <selk@dragora.org>.
# Copyright (c) 2022 Matias Fonzo, <selk@dragora.org>.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Exit immediately on any error
set -e

program=libarchive
version=3.7.7
release=1

# Define a category for the output of the package name
pkgcategory=libs

tarname=${program}-${version}.tar.xz

# Remote source(s)
fetch=https://libarchive.org/downloads/$tarname

description="
Multi-format archive and compression library.

The libarchive project develops a portable, efficient C library that
can read and write streaming archives in a variety of formats.

It also includes implementations of the common tar, cpio, and zcat
command-line tools that use the libarchive library.
"

homepage=http:/libarchive.org
license=BSD

# Source documentation
docs="COPYING NEWS README.md"
docsdir="${docdir}/${program}-${version}"

build()
{
    unpack "${tardir}/$tarname"

    cd "$srcdir"

    # Set sane permissions
    chmod -R u+w,go-w,a+rX-s .

    # Configure to make use of Expat and Nettle (instead of *ssl)

    ./configure \
    CPPFLAGS="$QICPPFLAGS" CFLAGS="$QICFLAGS" LDFLAGS="$QILDFLAGS" \
     $configure_args \
     --libdir=/usr/lib64 \
     --mandir=$mandir \
     --docdir=$docsdir \
     --enable-static=no \
     --enable-shared=yes \
     --without-xml2 \
     --without-openssl \
     --with-nettle \
     --build="$(gcc -dumpmachine)"

    make -j${jobs} V=1
    make -j${jobs} DESTDIR="$destdir" install

    rmdir "${destdir}/usr/bin" 2> /dev/null || true;

    # Compress and link man pages (if needed)
    if test -d "${destdir}/$mandir"
    then
        (
            cd "${destdir}/$mandir"
            find . -type f -exec lzip -9 {} +
            find . -type l | while read -r file
            do
                ln -sf "$(readlink -- "$file").lz" "${file}.lz"
                rm -- "$file"
            done
        )
    fi

    # Copy documentation
    mkdir -p "${destdir}/$docsdir"
    cp -p $docs "${destdir}/$docsdir"
}

